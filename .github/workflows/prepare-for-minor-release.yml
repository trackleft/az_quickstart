name: Prepare repository for new minor release
run-name: Update az_quickstart repository for new `${{ inputs.release_branch_name }}` minor release branch.
on:
  workflow_dispatch:
    inputs:
      release_branch_name:
        description: The name of the release branch (e.g. 2.8.x)
        required: true
jobs:
  print_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Print inputs
        run: |
          echo "release_branch_name: ${{ inputs.release_branch_name }}"

  branch_name_prep:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    outputs:
      next_release_branch_alias_constraint: ${{ steps.alias-version-constraint.outputs.NEXT_RELEASE_VERSION_CONSTRAINT }}
    steps:
      - name: Create version contstraint string for next release branch alias string.
        id: alias-version-constraint
        run: |
          NEXT_RELEASE_VERSION_CONSTRAINT=$(echo ${{ inputs.release_branch_name }} | sed 's/\(.*\)\.x/~\1/')
          echo "NEXT_RELEASE_VERSION_CONSTRAINT=${NEXT_RELEASE_VERSION_CONSTRAINT}" >> $GITHUB_OUTPUT
          echo "Next release version constraint: $NEXT_RELEASE_VERSION_CONSTRAINT" >> $GITHUB_STEP_SUMMARY
      - name: Create the composer main branch alias string.
        id: alias-main-branch
        run: |
          MAIN_BRANCH_ALIAS="${{ inputs.release_branch_name }}-dev"
          echo "MAIN_BRANCH_ALIAS=${MAIN_BRANCH_ALIAS}" >> $GITHUB_OUTPUT
          echo "Main branch alias: $MAIN_BRANCH_ALIAS" >> $GITHUB_STEP_SUMMARY

  draft_new_release:
    name: Draft a new release
    runs-on: ubuntu-latest
    needs: branch_name_prep
    steps:
    - name: Checkout az_quickstart
      uses: actions/checkout@v3
      with:
        repository: trackleft/az_quickstart
        ref: main

    # - name: Update composer.json requirement
    #   run: |
    #     cd az-quickstart-scaffolding
    #     jq '.require["az-digital/az_quickstart"] = "${{ needs.branch_name_prep.outputs.next_release_branch_alias_constraint}}"' composer.json > composer_temp.json
    #     mv composer_temp.json composer.json

    - name: Create and check out release branch
      run: |
        git checkout -b ${{ inputs.release_branch_name }}

    - name: Update DDev config in release branch
      run: |
        NEW_VERSION=${{ inputs.release_branch_name }}
        sed -i "0,/main/s//$NEW_VERSION/" .ddev/commands/web/install

    - name: Update Security workflow yml in release branch
      run: |
        NEW_VERSION=${{ inputs.release_branch_name }}
        sed -i "s/SCAFFOLD_BRANCH=main/SCAFFOLD_BRANCH=$NEW_VERSION/g" .github/workflows/security.yml

    - name: Update Create Release workflow yml in release branch
      run: |
        NEW_VERSION=${{ inputs.release_branch_name }}
        sed -i "s|git clone https://github.com/az-digital/az-quickstart-scaffolding.git az_quickstart|git clone -b $NEW_VERSION https://github.com/az-digital/az-quickstart-scaffolding.git az_quickstart|" .github/workflows/create-release.yml

    - name: Update Lando config in release branch
      run: |
        NEW_VERSION=${{ inputs.release_branch_name }}
        sed -i "s/SCAFFOLD_BRANCH=main/SCAFFOLD_BRANCH=$NEW_VERSION/g" .lando.yml

    - name: Update Probo config in release branch
      run: |
        NEW_VERSION=${{ inputs.release_branch_name }}
        sed -i "s/SCAFFOLD_BRANCH=main/SCAFFOLD_BRANCH=$NEW_VERSION/g" .probo.yaml

    - uses: php-actions/composer@v6
      with:
        command: config extra.branch-alias.dev-main ${{ inputs.release_branch_name }}-dev

    - name: Add changed files to release branch commit
      run: |
        git diff
        git add .ddev/commands/web/install
        git add .github/workflows/security.yml
        git add .github/workflows/create-release.yml
        git add .lando.yml
        git add .probo.yaml
        git add composer.json

    - name: Set up git
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

  # update_previous_release_branches:
  #   needs: draft_new_release
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       previous_version: [2.7.x, 2.6.x, 2.5.x, 2.4.x, 2.3.x, 2.2.x, 2.1.x, 2.0.x]
  #   steps:
  #     - name: Update previous release branch `${{ matrix.previous_version }}`
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ matrix.previous_version }}
  #     - name: Set up Git
  #       run: |
  #         git config user.name "GitHub Action"
  #         git config user.email "action@github.com"
  #     - uses: php-actions/composer@v6
  #       with:
  #         command: config extra.branch-alias.dev-main ${{ inputs.release_branch_name }}-dev
  #     - name: Show git status
  #       run: |
  #         git status
  #     - name: Show git diff
  #       run: git diff

  # finalize:
  #   needs: update_previous_release_branches
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Commit and push changes
  #       run: |
  #         cd az_quickstart
  #         git add .   # or specify the files you changed like git add composer.json
  #         git commit -m "All required changes for new release"
  #         git push origin ${{ inputs.release_branch_name }}  # push changes to the new branch

  #         cd ../az-quickstart-scaffolding
  #         git add .   # or specify the files you changed like git add composer.json
  #         git commit -m "All required changes for new release"
  #         git push origin ${{ inputs.release_branch_name }}  # push changes to the new branch

  #         cd ../
